x-environment: &shared-env
  DB_USERNAME: depute
  DB_PASSWORD: ${DB_PASSWORD:-DeputeDB}
  DB_HOST: postgres
  DB_DATABASE: data

  REDIS_HOST: redis

  JWT_SECRET_KEY: ${JWT_SECRET:?}

  S3_ENDPOINT: ${S3_ENDPOINT:?}
  S3_REGION: ${S3_REGION:?}
  S3_ACCESS_KEY: ${S3_ACCESS_KEY:?}
  S3_SECRET_KEY: ${S3_SECRET_KEY:?}
  S3_BUCKET: ${S3_BUCKET:?}

services:
  web:
    image: depute-backend:latest
    restart: unless-stopped

    build:
      context: .
      dockerfile: Dockerfile

    command: python -m uvicorn --factory --host 0.0.0.0 --port 8080 --workers ${WEB_WORKERS:-4} --proxy-headers --forwarded-allow-ips="*" backend.presentation.web:create_app

    expose:
      - 8080

    environment: *shared-env

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:17.1-alpine
    hostname: postgres
    restart: unless-stopped

    volumes:
      - pg-data:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: payments
      POSTGRES_PASSWORD: ${DB_PASSWORD:-PaymentsDB}
      POSTGRES_DB: data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U depute -d data"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.4.1-alpine
    hostname: shared-redis
    restart: unless-stopped

    volumes:
      - redis-data:/data

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg-data:
  redis-data:

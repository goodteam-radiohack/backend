"""add event_for & visibility fields for event

Revision ID: 3c38c71da5b4
Revises: d801b98bfba3
Create Date: 2025-10-07 18:03:57.085848

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3c38c71da5b4'
down_revision: Union[str, Sequence[str], None] = 'd801b98bfba3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

enum = postgresql.ENUM('PUBLIC', 'PRIVATE', name='event_visibility')

def upgrade() -> None:
    """Upgrade schema."""
    enum.create(op.get_bind())

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('visibility', enum, server_default='PUBLIC', nullable=False))
    op.add_column('events', sa.Column('event_for_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_events_event_for_id_users'), 'events', 'users', ['event_for_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_events_event_for_id_users'), 'events', type_='foreignkey')
    op.drop_column('events', 'event_for_id')
    op.drop_column('events', 'visibility')

    enum.drop(op.get_bind())
    # ### end Alembic commands ###
